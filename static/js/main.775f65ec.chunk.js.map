{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","time","setInterval","setState","console","log","toLocaleTimeString","oldProps","name","props","clearTimeout","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","random","toFixed","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,KAAOC,aAAY,WACtB,EAAKC,SAAS,CACZL,KAAM,IAAIC,OAIZK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAbP,gCAgBE,SAAmBC,GACbA,EAASC,OAASR,KAAKS,MAAMD,MAE/BJ,QAAQC,IAAR,qCAA0CE,EAASC,KAAnD,eAA8DR,KAAKS,MAAMD,SAnB/E,kCAuBE,WACEE,aAAaV,KAAKC,QAxBtB,oBA2BE,WAAU,IAEFA,EADWD,KAAKH,MAAdC,KACUQ,qBAElB,OACE,gCACGL,OAjCT,GAA2BU,IAAMC,WCiDlBC,G,kNA9CbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,K,EAGbC,UAAY,WACV,EAAKb,SAAS,CAAEW,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKd,SAAS,CAAEW,gBAAgB,K,EAGlCI,cAAgB,WACT,EAAKrB,MAAMiB,gBAIhB,EAAKX,SAAS,CAAEY,UAAU,GAAD,OAAKI,KAAKC,SAASC,QAAQ,O,4CAGtD,WAAU,IAAD,EAC+BrB,KAAKH,MAAnCiB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CACA,4CAEGR,GAAkB,kBAAC,EAAD,CAAON,KAAMO,KAGlC,4BAAQQ,KAAK,SAASC,QAASxB,KAAKgB,WAApC,cAGA,4BAAQO,KAAK,SAASC,QAASxB,KAAKiB,WAApC,cAGA,4BAAQM,KAAK,SAASC,QAASxB,KAAKkB,eAApC,wB,GAvCUP,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.775f65ec.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.time = setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.time);\n  }\n\n  render() {\n    const { date } = this.state;\n    const time = date.toLocaleTimeString();\n\n    return (\n      <strong>\n        {time}\n      </strong>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: '0',\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  setRandomName = () => {\n    if (!this.state.isClockVisible) {\n      return;\n    }\n\n    this.setState({ clockName: `${Math.random().toFixed(1)}` });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          {`Current time: `}\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n\n        <button type=\"button\" onClick={this.showClock}>\n          Show clock\n        </button>\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide clock\n        </button>\n        <button type=\"button\" onClick={this.setRandomName}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}